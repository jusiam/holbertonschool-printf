.TH _printf "28/03/2024" "Version 1.0" "First team project"

.SH NAME
printf

.SH SYNOPSIS
#include <main.h>

int _printf(const char *format,...)

.SH DESCRIPTION
The _printf() function use differents specifier with associated function, which formats and prints an data output.

Supported specifiers :
	'c' (character)
	's' (string)
	'%' (percent)

.SH RETURN
For a successful treatement, the _printf() function returns the number of characters printed
(without the null byte at end).

If the function meet an error, it returns -1.

.SH EXAMPLES
To demonstrate the usage of each specifier:

.RS
.B 'c' (character):
.in +2n
To print a character:
.in
.RS
.RS
.B _printf("%c", 'A');
.RE

.nf
#include "main.h"

int main(void)

{

	_printf("%c\n", 'H');

}
.fi

.nf
H
.fi

.B 's' (string):
.in +2n
To print a string:
.in
.RS
.RS
.B _printf("%s", "Hello, World!");
.RE

.nf
#include "main.h"

int main(void)

{

        _printf("%s\n", "Hello world");

}
.fi

.nf
Hello world
.fi

.B '%' (percent):
.in +2n
To print a percent sign:
.in
.RS
.RS
.B _printf("100%%");
.RE
.RE

.nf
#include "main.h"

int main(void)

{

        _printf("%%\n");

}
.fi

.nf
%
.fi

.SH BUGS
No bugs for now.

.SH AUTHOR
Sofiane Slimane and Nicolas Fouquet
